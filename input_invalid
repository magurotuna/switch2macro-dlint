  fn for_direction_invalid() {
    // ++, --
    assert_lint_err::<ForDirection>("for(let i = 0; i < 2; i--) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 0; i < 2; --i) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 0; i <= 2; i--) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 0; i <= 2; --i) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i > 2; i++) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i > 2; ++i) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i >= 0; i++) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i >= 0; ++i) {}", 0);
    // +=, -=
    assert_lint_err::<ForDirection>("for(let i = 0; i < 2; i -= 1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 0; i <= 2; i -= 1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i > 2; i -= -1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i >= 0; i -= -1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i > 2; i += 1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 2; i >= 0; i += 1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 0; i < 2; i += -1) {}", 0);
    assert_lint_err::<ForDirection>("for(let i = 0; i <= 2; i += -1) {}", 0);
    // nested
    assert_lint_err_on_line::<ForDirection>(
      r#"
for (let i = 0; i < 2; i++) {
  for (let j = 0; j < 2; j--) {}
}
      "#,
      3,
      2,
    );
  }
